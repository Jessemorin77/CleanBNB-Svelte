generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model User {
  id            String   @id @default(uuid())
  email         String   @unique
  passwordHash  String
  userAuthToken String   @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  bids       Bid[]

  sentMessages   Message[] @relation("SentMessage")
  receivedMessages Message[] @relation("ReceivedMessage")
  rooms          Room[]    @relation("UserRoom")
}

model Room {
  id        Int       @id @default(autoincrement())
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  users     User[]    @relation("UserRoom")
  messages  Message[]
}

model Message {
  id         Int       @id @default(autoincrement())
  content    String
  sentAt     DateTime  @default(now())

  // Specify the fields and references here, not in the User model
  sender     User      @relation("SentMessage", fields: [senderId], references: [id])
  senderId   String
  receiver   User?     @relation("ReceivedMessage", fields: [receiverId], references: [id])
  receiverId String?
  room       Room      @relation(fields: [roomId], references: [id])
  roomId     Int
}

model Property {
  id      String   @id @default(cuid())
  Address String
  City    String?
  State   String?
  Zip     Int?
  Beds    Int?
  Baths   Int?
  Sqft    Int?
  Type    String?
  Status  String?
  Image   String?
  Desc    String?
  listings Listing[]
}

model Listing {
  id             String   @id @default(cuid())
  propertyId     String
  property       Property @relation(fields: [propertyId], references: [id])
  jobType        String
  contractorType String
  readyToHire    Boolean
  startDate      DateTime
  endDate        DateTime
  title          String
  description    String
  budget         Int
  bids           Bid[]
  jobs           Job[]
}


model Bid {
  id         String   @id @default(cuid())
  userId     String
  user       User? @relation(fields: [userId], references: [id])// Foreign key referencing UserProfile discordId
  listingId  String
  listing    Listing? @relation(fields: [listingId], references: [id])
  bidAmount  Int?
  bidMessage String?
  bidStatus  String?
  bidDate    DateTime @default(now())
  job        Job[]
}

model Job {
  id        String   @id @default(cuid())
  userId    String   // Foreign key referencing UserProfile discordId
  contractorId String 
  listingId String
  listing   Listing? @relation(fields: [listingId], references: [id])
  bidId     String
  bid       Bid?     @relation(fields: [bidId], references: [id])
  jobAmount Int?
  jobStatus String?
  jobDate   DateTime @default(now())
}
